name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

# Least-privilege default; override per job as needed
permissions:
  contents: read

# Prevent overlapping runs on the same ref
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-test:
    runs-on: ${{ matrix.os }}
    name: Build & Test (${{ matrix.os }} | py${{ matrix.python-version }})
    timeout-minutes: 30
    permissions:
      contents: read
      id-token: write
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.10", "3.11", "3.12", "3.13"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: |
            requirements.txt
            pyproject.toml
            requirements-dev.txt

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt

      - name: Lint (ruff)
        run: ruff check .

      - name: Format check (ruff format)
        run: ruff format --check .

      - name: Type check (mypy)
        run: mypy .

      - name: Security audit (pip-audit)
        run: |
          python -m pip_audit -r requirements.txt || python -m pip_audit || exit 1

      - name: Run tests with coverage threshold
        run: |
          coverage run -m pytest
          coverage report --fail-under=80
          coverage xml

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml-${{ matrix.os }}-${{ matrix.python-version }}
          path: coverage.xml
          if-no-files-found: ignore
          retention-days: 7
        if: always()

      - name: Upload coverage to Codecov
        id: codecov-oidc
        uses: codecov/codecov-action@v5
        with:
          files: coverage.xml
          flags: unittests
          fail_ci_if_error: false
          use_oidc: true
        continue-on-error: true
        if: always()

  smoke-install:
    name: Verify install and import
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.12'
          cache: 'pip'
          cache-dependency-path: requirements.txt
      - name: Install package
        run: |
          python -m pip install --upgrade pip
          pip install .
      - name: Import smoke test
        run: |
          python - <<'PY'
          import semiconductor_sim
          from semiconductor_sim.devices import PNJunctionDiode
          d = PNJunctionDiode(doping_p=1e17, doping_n=1e17, temperature=300)
          print('ok', bool(d))
          PY

  dependency-review:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Dependency Review
        uses: actions/dependency-review-action@v4

  docs-build:
    name: Build Docs (strict)
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.12'
          cache: 'pip'
          cache-dependency-path: |
            pyproject.toml
      - name: Install doc tooling
        run: |
          python -m pip install --upgrade pip
          pip install mkdocs-material mkdocstrings mkdocstrings-python
      - name: Build docs strictly
        run: mkdocs build --strict
