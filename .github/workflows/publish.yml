name: Publish to PyPI

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  validate-metadata:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install validation tools
        run: |
          python -m pip install --upgrade pip
          pip install build twine
      - name: Build package
        run: |
          python -m build
      - name: Validate metadata with twine
        run: |
          twine check dist/*
      - name: Upload validation artifacts
        uses: actions/upload-artifact@v4
        with:
          name: validation-dist
          path: dist/*

  build-wheels:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v4
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.16.2
        env:
          CIBW_BUILD: cp310-* cp311-* cp312-* cp313-*
          CIBW_SKIP: "*-win32 *-manylinux_i686"
          CIBW_BEFORE_BUILD: pip install --upgrade pip setuptools wheel
          CIBW_TEST_COMMAND: python -c "import semiconductor_sim; from semiconductor_sim.devices import PNJunctionDiode; d = PNJunctionDiode(1e17, 1e17); print('Import test passed')"
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: wheelhouse/*.whl

  build-sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install build
      - name: Build sdist
        run: |
          python -m build --sdist
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz

  smoke-test-extras:
    runs-on: ubuntu-latest
    needs: [build-sdist]
    strategy:
      matrix:
        extra: [plotting, notebooks, accel]
    steps:
      - name: Download sdist
        uses: actions/download-artifact@v4
        with:
          name: sdist
          path: dist
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Test extra installation
        run: |
          pip install dist/*.tar.gz[${{ matrix.extra }}]
          python -c "import semiconductor_sim; print('${{ matrix.extra }} extra installed successfully')"

  publish:
    needs: [validate-metadata, build-wheels, build-sdist, smoke-test-extras]
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/semiconductor-sim
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          print-hash: true
